<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABnAHUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KKKKACiiuN+Onxs0H9nn4Y6n4s8S3ElvpeloCViXdNcSMQscMa5G53YhQCQOckhQSNKNGdWapUk3KTS
        SW7b2RlXr06NOVas1GMU229Ekt2zss0V+XPxA/4K0fFTx3rMk/h+XSfBulhv3FtBaR3txt/6aSzKys3u
        iIPY9T137Pn/AAV+17w34jttP+KENlqmh3DhJNZsbbyLuwz/AMtJIk+SWMdSEVWAyQHOFr9DxHhVn9HC
        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
</value>
  </data>
</root>